{
  "address": "0x2C50D85F4375C0732Ce02e8677aca13b7C84d66F",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPrice",
          "type": "uint256"
        }
      ],
      "name": "RewardsDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositRewards",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethBalance",
          "type": "uint256"
        }
      ],
      "name": "ethFromBurn",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mint",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "teamAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "ethAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "tokenSupply",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "ethBalance",
          "type": "uint256"
        }
      ],
      "name": "tokenFromMint",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPrice",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0xdebfb0e7d0ced1c75e3043d8622f13bfc3174cb5f239c4a79f9a31bed38ac850",
  "receipt": {
    "to": null,
    "from": "0x4736725fdD5F58C4aca74426042442e71CB97ef1",
    "contractAddress": "0x2C50D85F4375C0732Ce02e8677aca13b7C84d66F",
    "transactionIndex": 10,
    "gasUsed": "1381630",
    "logsBloom": "0x
    "blockHash": "0xdba698dc364b7b701aac80ea66ea8c09c8fe39b0b661be2f2c5071fa30bf89b7",
    "transactionHash": "0xdebfb0e7d0ced1c75e3043d8622f13bfc3174cb5f239c4a79f9a31bed38ac850",
    "logs": [],
    "blockNumber": 27109833,
    "cumulativeGasUsed": "2275481",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "8555b99249647032afdc10b0171c44cb",
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"RewardsDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositRewards\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethBalance\",\"type\":\"uint256\"}],\"name\":\"ethFromBurn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"teamAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenSupply\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethBalance\",\"type\":\"uint256\"}],\"name\":\"tokenFromMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPrice\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Capu\",\"events\":{\"Burn(address,uint256,uint256)\":{\"details\":\"Just the Transfer event is not enough, since that doesnt track how much eth was returned\",\"params\":{\"ethAmount\":\"how much eth is returned to the user\",\"tokenAmount\":\"how many tokens are burned\",\"user\":\"who the tokens are burned from\"}},\"Mint(address,uint256,uint256)\":{\"details\":\"Just the Transfer event is not enough, since that doesnt track how much eth was used to mint\",\"params\":{\"ethAmount\":\"how much eth is deposited into the pool\",\"tokenAmount\":\"how many tokens are issued\",\"user\":\"who the tokens are issued to\"}},\"RewardsDeposited(uint256,uint256)\":{\"params\":{\"amount\":\"The rewards amount\",\"newPrice\":\"The tokenPrice after the rewards are deposited\"}}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"This doesnt change the tokenPrice, except in the case of a burn getting the totalSupply to zero, where the price would go back to 1\",\"params\":{\"amount\":\"the amount of tokens to burn\"}},\"constructor\":{\"details\":\"The teamAddress is set to the deployer addressUses the default of 18 decimals\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"depositRewards()\":{\"details\":\"This DOES change the tokenPrice\"},\"ethFromBurn(uint256,uint256,uint256)\":{\"params\":{\"ethBalance\":\"the contract's eth balance that the price will be computed with\",\"tokenSupply\":\"the token total supply that the price will be computed with\"},\"returns\":{\"_0\":\"raw ETH amount returned by burning tokens (without any 'precision')\"}},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint()\":{\"details\":\"This doesnt change the tokenPrice\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"tokenFromMint(uint256,uint256,uint256)\":{\"params\":{\"ethBalance\":\"the contract's eth balance that the price will be computed with\",\"tokenSupply\":\"the token total supply that the price will be computed with\"},\"returns\":{\"_0\":\"raw token amount returned by depositing ETH (without any 'precision')\"}},\"tokenPrice()\":{\"details\":\"This is only called from outside the contract\",\"returns\":{\"_0\":\"The token price with 18 decimals precision\"}},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"title\":\"ETHPool, a rewards distribution contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(uint256)\":{\"notice\":\"Burn your POOL tokens, and get your ETH back plus any rewards\"},\"constructor\":{\"notice\":\"Constructor, initializes name and symbols to hard-coded values\"},\"depositRewards()\":{\"notice\":\"Deposit ETH into the pool, without minting tokens, so it makes the tokens already owned by users more valuable in ETHmsg.value will be the amount of eth to deposit. The amount of tokens issued can be lower\"},\"mint()\":{\"notice\":\"Deposit ETH into the pool, minting an ERC20 token representing shares of the poolmsg.value will be the amount of eth to deposit. The amount of tokens issued can be lower\"},\"teamAddress()\":{\"notice\":\"the address that can deposit rewards\"},\"tokenPrice()\":{\"notice\":\"Current token price, that is, how much a token costs in terms of eth\"}},\"notice\":\"this is part of a tech challenge by Exactly Finance\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ETHPool.sol\":\"ETHPool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"./extensions/IERC20Metadata.sol\\\";\\nimport \\\"../../utils/Context.sol\\\";\\n\\n/**\\n * @dev Implementation of the {IERC20} interface.\\n *\\n * This implementation is agnostic to the way tokens are created. This means\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\n *\\n * TIP: For a detailed writeup see our guide\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\n * to implement supply mechanisms].\\n *\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\n * instead returning `false` on failure. This behavior is nonetheless\\n * conventional and does not conflict with the expectations of ERC20\\n * applications.\\n *\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\n * This allows applications to reconstruct the allowance for all accounts just\\n * by listening to said events. Other implementations of the EIP may not emit\\n * these events, as it isn't required by the specification.\\n *\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\n * functions have been added to mitigate the well-known issues around setting\\n * allowances. See {IERC20-approve}.\\n */\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\n    mapping(address => uint256) private _balances;\\n\\n    mapping(address => mapping(address => uint256)) private _allowances;\\n\\n    uint256 private _totalSupply;\\n\\n    string private _name;\\n    string private _symbol;\\n\\n    /**\\n     * @dev Sets the values for {name} and {symbol}.\\n     *\\n     * The default value of {decimals} is 18. To select a different value for\\n     * {decimals} you should overload it.\\n     *\\n     * All two of these values are immutable: they can only be set once during\\n     * construction.\\n     */\\n    constructor(string memory name_, string memory symbol_) {\\n        _name = name_;\\n        _symbol = symbol_;\\n    }\\n\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() public view virtual override returns (string memory) {\\n        return _name;\\n    }\\n\\n    /**\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\n     * name.\\n     */\\n    function symbol() public view virtual override returns (string memory) {\\n        return _symbol;\\n    }\\n\\n    /**\\n     * @dev Returns the number of decimals used to get its user representation.\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\n     *\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\n     * overridden;\\n     *\\n     * NOTE: This information is only used for _display_ purposes: it in\\n     * no way affects any of the arithmetic of the contract, including\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\n     */\\n    function decimals() public view virtual override returns (uint8) {\\n        return 18;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-totalSupply}.\\n     */\\n    function totalSupply() public view virtual override returns (uint256) {\\n        return _totalSupply;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-balanceOf}.\\n     */\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\n        return _balances[account];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transfer}.\\n     *\\n     * Requirements:\\n     *\\n     * - `recipient` cannot be the zero address.\\n     * - the caller must have a balance of at least `amount`.\\n     */\\n    function transfer(address recipient, uint256 amount) public virtual override returns (bool) {\\n        _transfer(_msgSender(), recipient, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-allowance}.\\n     */\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\n        return _allowances[owner][spender];\\n    }\\n\\n    /**\\n     * @dev See {IERC20-approve}.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\n        _approve(_msgSender(), spender, amount);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev See {IERC20-transferFrom}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` and `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     * - the caller must have allowance for ``sender``'s tokens of at least\\n     * `amount`.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) public virtual override returns (bool) {\\n        _transfer(sender, recipient, amount);\\n\\n        uint256 currentAllowance = _allowances[sender][_msgSender()];\\n        require(currentAllowance >= amount, \\\"ERC20: transfer amount exceeds allowance\\\");\\n        unchecked {\\n            _approve(sender, _msgSender(), currentAllowance - amount);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     */\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\n        _approve(_msgSender(), spender, _allowances[_msgSender()][spender] + addedValue);\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\n     *\\n     * This is an alternative to {approve} that can be used as a mitigation for\\n     * problems described in {IERC20-approve}.\\n     *\\n     * Emits an {Approval} event indicating the updated allowance.\\n     *\\n     * Requirements:\\n     *\\n     * - `spender` cannot be the zero address.\\n     * - `spender` must have allowance for the caller of at least\\n     * `subtractedValue`.\\n     */\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\n        uint256 currentAllowance = _allowances[_msgSender()][spender];\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\n        unchecked {\\n            _approve(_msgSender(), spender, currentAllowance - subtractedValue);\\n        }\\n\\n        return true;\\n    }\\n\\n    /**\\n     * @dev Moves `amount` of tokens from `sender` to `recipient`.\\n     *\\n     * This internal function is equivalent to {transfer}, and can be used to\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\n     *\\n     * Emits a {Transfer} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `sender` cannot be the zero address.\\n     * - `recipient` cannot be the zero address.\\n     * - `sender` must have a balance of at least `amount`.\\n     */\\n    function _transfer(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) internal virtual {\\n        require(sender != address(0), \\\"ERC20: transfer from the zero address\\\");\\n        require(recipient != address(0), \\\"ERC20: transfer to the zero address\\\");\\n\\n        _beforeTokenTransfer(sender, recipient, amount);\\n\\n        uint256 senderBalance = _balances[sender];\\n        require(senderBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\n        unchecked {\\n            _balances[sender] = senderBalance - amount;\\n        }\\n        _balances[recipient] += amount;\\n\\n        emit Transfer(sender, recipient, amount);\\n\\n        _afterTokenTransfer(sender, recipient, amount);\\n    }\\n\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\n     * the total supply.\\n     *\\n     * Emits a {Transfer} event with `from` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     */\\n    function _mint(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\n\\n        _beforeTokenTransfer(address(0), account, amount);\\n\\n        _totalSupply += amount;\\n        _balances[account] += amount;\\n        emit Transfer(address(0), account, amount);\\n\\n        _afterTokenTransfer(address(0), account, amount);\\n    }\\n\\n    /**\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\n     * total supply.\\n     *\\n     * Emits a {Transfer} event with `to` set to the zero address.\\n     *\\n     * Requirements:\\n     *\\n     * - `account` cannot be the zero address.\\n     * - `account` must have at least `amount` tokens.\\n     */\\n    function _burn(address account, uint256 amount) internal virtual {\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\n\\n        _beforeTokenTransfer(account, address(0), amount);\\n\\n        uint256 accountBalance = _balances[account];\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\n        unchecked {\\n            _balances[account] = accountBalance - amount;\\n        }\\n        _totalSupply -= amount;\\n\\n        emit Transfer(account, address(0), amount);\\n\\n        _afterTokenTransfer(account, address(0), amount);\\n    }\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\n     *\\n     * This internal function is equivalent to `approve`, and can be used to\\n     * e.g. set automatic allowances for certain subsystems, etc.\\n     *\\n     * Emits an {Approval} event.\\n     *\\n     * Requirements:\\n     *\\n     * - `owner` cannot be the zero address.\\n     * - `spender` cannot be the zero address.\\n     */\\n    function _approve(\\n        address owner,\\n        address spender,\\n        uint256 amount\\n    ) internal virtual {\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\n\\n        _allowances[owner][spender] = amount;\\n        emit Approval(owner, spender, amount);\\n    }\\n\\n    /**\\n     * @dev Hook that is called before any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * will be transferred to `to`.\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _beforeTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n\\n    /**\\n     * @dev Hook that is called after any transfer of tokens. This includes\\n     * minting and burning.\\n     *\\n     * Calling conditions:\\n     *\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\n     * has been transferred to `to`.\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\n     * - `from` and `to` are never both zero.\\n     *\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\n     */\\n    function _afterTokenTransfer(\\n        address from,\\n        address to,\\n        uint256 amount\\n    ) internal virtual {}\\n}\\n\",\"keccak256\":\"0xb03df8481a954604ad0c9125680893b2e3f7ff770fe470e38b89ac61b84e8072\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(\\n        address sender,\\n        address recipient,\\n        uint256 amount\\n    ) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x027b891937d20ccf213fdb9c31531574256de774bda99d3a70ecef6e1913ed2a\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../IERC20.sol\\\";\\n\\n/**\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\n *\\n * _Available since v4.1._\\n */\\ninterface IERC20Metadata is IERC20 {\\n    /**\\n     * @dev Returns the name of the token.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the symbol of the token.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the decimals places of the token.\\n     */\\n    function decimals() external view returns (uint8);\\n}\\n\",\"keccak256\":\"0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x90565a39ae45c80f0468dc96c7b20d0afc3055f344c8203a0c9258239f350b9f\",\"license\":\"MIT\"},\"contracts/ETHPool.sol\":{\"content\":\"//SPDX-License-Identifier: GPL-3.0-or-later\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/token/ERC20/ERC20.sol\\\";\\n\\n/// @title ETHPool, a rewards distribution contract\\n/// @notice this is part of a tech challenge by Exactly Finance\\n/// @author Capu\\ncontract ETHPool is ERC20{\\n    /// @notice the address that can deposit rewards\\n    address public immutable teamAddress;\\n    uint256 private constant WAD=10**18;\\n\\n    /// @param amount The rewards amount\\n    /// @param newPrice The tokenPrice after the rewards are deposited\\n    event RewardsDeposited(uint256 amount, uint256 newPrice);\\n\\n    /// @param user who the tokens are issued to\\n    /// @param tokenAmount how many tokens are issued\\n    /// @param ethAmount how much eth is deposited into the pool\\n    /// @dev Just the Transfer event is not enough, since that doesnt track how much eth was used to mint\\n    event Mint(address user, uint256 tokenAmount, uint256 ethAmount);\\n\\n    /// @param user who the tokens are burned from\\n    /// @param tokenAmount how many tokens are burned\\n    /// @param ethAmount how much eth is returned to the user\\n    /// @dev Just the Transfer event is not enough, since that doesnt track how much eth was returned\\n    event Burn(address user, uint256 tokenAmount, uint256 ethAmount);\\n\\n    /// @notice Constructor, initializes name and symbols to hard-coded values\\n    /// @dev The teamAddress is set to the deployer address\\n    /// @dev Uses the default of 18 decimals\\n    constructor() ERC20(\\\"ETHPOOL rewards distribution token\\\", \\\"POOL\\\") {\\n        teamAddress = msg.sender;\\n    }\\n\\n    /// @notice Deposit ETH into the pool, minting an ERC20 token representing shares of the pool\\n    /// @notice  msg.value will be the amount of eth to deposit. The amount of tokens issued can be lower\\n    /// @dev This doesnt change the tokenPrice\\n    function mint() public payable {\\n        require(msg.sender != teamAddress, \\\"team address cant mint\\\");\\n        uint256 tokenAmount = tokenFromMint(msg.value, totalSupply(), address(this).balance - msg.value);\\n        emit Mint(msg.sender, tokenAmount, msg.value);\\n        _mint(msg.sender, tokenAmount);\\n    }\\n\\n    /// @notice Deposit ETH into the pool, without minting tokens, so it makes the tokens already owned by users more valuable in ETH\\n    /// @notice msg.value will be the amount of eth to deposit. The amount of tokens issued can be lower\\n    /// @dev This DOES change the tokenPrice\\n    function depositRewards() public payable {\\n        require(totalSupply() > 0, \\\"mint first\\\");\\n        require(msg.sender == teamAddress, \\\"only team address can deposit\\\");\\n        emit RewardsDeposited(msg.value, _tokenPrice(totalSupply(), address(this).balance));\\n    }\\n\\n    /// @notice Burn your POOL tokens, and get your ETH back plus any rewards\\n    /// @param amount the amount of tokens to burn\\n    /// @dev This doesnt change the tokenPrice, except in the case of a burn getting the totalSupply to zero, where the price would go back to 1\\n    function burn(uint256 amount) public {\\n        // TODO: okay now I should get serious about reentrancy\\n        uint256 ethToReturn = ethFromBurn(amount, totalSupply(), address(this).balance);\\n        emit Burn(msg.sender, amount, ethToReturn);\\n        _burn(msg.sender, amount);\\n        // TODO: should I add a reentrancy guard or is doing it in the end enough?\\n        payable(msg.sender).transfer(ethToReturn);\\n    }\\n\\n    /// @notice Current token price, that is, how much a token costs in terms of eth\\n    /// @dev This is only called from outside the contract\\n    /// @return The token price with 18 decimals precision\\n    function tokenPrice() public view returns (uint256){\\n        return totalSupply() == 0 ? WAD : address(this).balance * WAD / totalSupply();\\n    }\\n\\n    /// @notice Token price, that is, how much a token costs in terms of eth, determined by the passed parameters\\n    /// @dev This is only called from inside the contract, and is necessary to calculate the token price without considering this call's value transfer or changes in supply\\n    /// @param tokenSupply the token total supply that the price will be computed with\\n    /// @param ethBalance the contract's eth balance that the price will be computed with\\n    /// @return The token price with 18 decimals precision\\n    function _tokenPrice(uint256 tokenSupply, uint256 ethBalance) private pure returns (uint256){\\n        return tokenSupply == 0 ? WAD : ethBalance * WAD / tokenSupply;\\n    }\\n\\n    /// @param tokenSupply the token total supply that the price will be computed with\\n    /// @param ethBalance the contract's eth balance that the price will be computed with\\n    /// @return raw ETH amount returned by burning tokens (without any 'precision')\\n    function ethFromBurn(uint256 amount, uint256 tokenSupply, uint256 ethBalance) public pure returns (uint256){\\n        return amount*_tokenPrice(tokenSupply, ethBalance)/WAD;\\n    }\\n\\n    /// @param tokenSupply the token total supply that the price will be computed with\\n    /// @param ethBalance the contract's eth balance that the price will be computed with\\n    /// @return raw token amount returned by depositing ETH (without any 'precision')\\n    function tokenFromMint(uint256 ethAmount, uint256 tokenSupply, uint256 ethBalance) public pure returns (uint256){\\n        return ethAmount*WAD/_tokenPrice(tokenSupply, ethBalance);\\n    }\\n}\\n\",\"keccak256\":\"0x2ae1e801fc99b2f5f7aa52c12d7728618343783dea9e51ae416f5f21574ea7c7\",\"license\":\"GPL-3.0-or-later\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b506040518060600160405280602281526020016200180f60229139604051806040016040528060048152602001631413d3d360e21b81525081600390805190602001906200006192919062000087565b5080516200007790600490602084019062000087565b5050503360601b6080526200016a565b82805462000095906200012d565b90600052602060002090601f016020900481019282620000b9576000855562000104565b82601f10620000d457805160ff191683800117855562000104565b8280016001018555821562000104579182015b8281111562000104578251825591602001919060010190620000e7565b506200011292915062000116565b5090565b5b8082111562000112576000815560010162000117565b6002810460018216806200014257607f821691505b602082108114156200016457634e487b7160e01b600052602260045260246000fd5b50919050565b60805160601c611678620001976000396000818161040f0152818161052b01526105d501526116786000f3fe6080604052600436106101295760003560e01c806342966c68116100a557806395d89b4111610074578063a9059cbb11610059578063a9059cbb146102e8578063dd62ed3e14610308578063f8369e871461032857610129565b806395d89b41146102b3578063a457c2d7146102c857610129565b806342966c681461023e578063649174281461025e57806370a082311461027e5780637ff9b5961461029e57610129565b806318160ddd116100fc57806323b872dd116100e157806323b872dd146101dc578063313ce567146101fc578063395093511461021e57610129565b806318160ddd146101985780631c75f085146101ba57610129565b806306fdde031461012e578063095ea7b3146101595780631249c58b14610186578063152111f714610190575b600080fd5b34801561013a57600080fd5b50610143610348565b6040516101509190611063565b60405180910390f35b34801561016557600080fd5b50610179610174366004610f9d565b6103da565b6040516101509190611058565b61018e6103f7565b005b61018e6104d2565b3480156101a457600080fd5b506101ad6105cd565b60405161015091906114f5565b3480156101c657600080fd5b506101cf6105d3565b6040516101509190611009565b3480156101e857600080fd5b506101796101f7366004610f62565b6105f7565b34801561020857600080fd5b506102116106c8565b604051610150919061150c565b34801561022a57600080fd5b50610179610239366004610f9d565b6106cd565b34801561024a57600080fd5b5061018e610259366004610fc6565b61072e565b34801561026a57600080fd5b506101ad610279366004610fde565b6107bb565b34801561028a57600080fd5b506101ad610299366004610f16565b6107eb565b3480156102aa57600080fd5b506101ad610817565b3480156102bf57600080fd5b5061014361085e565b3480156102d457600080fd5b506101796102e3366004610f9d565b61086d565b3480156102f457600080fd5b50610179610303366004610f9d565b61090d565b34801561031457600080fd5b506101ad610323366004610f30565b610921565b34801561033457600080fd5b506101ad610343366004610fde565b610959565b606060038054610357906115bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610383906115bf565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b60006103ee6103e7610978565b848461097c565b50600192915050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610470576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061142a565b60405180910390fd5b60006104883461047e6105cd565b61027934476115a8565b90507f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f3382346040516104bd9392919061102a565b60405180910390a16104cf3382610a8b565b50565b60006104dc6105cd565b11610513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061127f565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611248565b7f8ad0c4905aa5603107e860e0c2b1a78e23eba312c30f8114a70d94d9e187f5af346105b56105af6105cd565b47610b98565b6040516105c39291906114fe565b60405180910390a1565b60025490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610604848484610bd3565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040812081610632610978565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906112b6565b6106bd856106b5610978565b85840361097c565b506001949350505050565b601290565b60006103ee6106da610978565b8484600160006106e8610978565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918b1681529252902054610729919061151a565b61097c565b60006107428261073c6105cd565b47610959565b90507f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a3383836040516107779392919061102a565b60405180910390a16107893383610d99565b604051339082156108fc029083906000818181858888f193505050501580156107b6573d6000803e3d6000fd5b505050565b60006107c78383610b98565b6107d9670de0b6b3a76400008661156b565b6107e39190611532565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b60006108216105cd565b1561084f5761082e6105cd565b610840670de0b6b3a76400004761156b565b61084a9190611532565b610859565b670de0b6b3a76400005b905090565b606060048054610357906115bf565b6000806001600061087c610978565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918816815292529020549050828110156108ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611461565b6109036108fa610978565b8585840361097c565b5060019392505050565b60006103ee61091a610978565b8484610bd3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000670de0b6b3a764000061096e8484610b98565b6107d9908661156b565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166109c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906113cd565b73ffffffffffffffffffffffffffffffffffffffff8216610a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061118e565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a7e9085906114f5565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906114be565b610ae4600083836107b6565b8060026000828254610af6919061151a565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610b3090849061151a565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b809085906114f5565b60405180910390a3610b94600083836107b6565b5050565b60008215610bc25782610bb3670de0b6b3a76400008461156b565b610bbd9190611532565b610bcc565b670de0b6b3a76400005b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611370565b73ffffffffffffffffffffffffffffffffffffffff8216610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906110d4565b610c788383836107b6565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906111eb565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610d1c90849061151a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8091906114f5565b60405180910390a3610d938484846107b6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610de6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611313565b610df2826000836107b6565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610e52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611131565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610e8e9084906115a8565b909155505060405160009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ede9086906114f5565b60405180910390a36107b6836000846107b6565b803573ffffffffffffffffffffffffffffffffffffffff8116811461081257600080fd5b600060208284031215610f27578081fd5b610bcc82610ef2565b60008060408385031215610f42578081fd5b610f4b83610ef2565b9150610f5960208401610ef2565b90509250929050565b600080600060608486031215610f76578081fd5b610f7f84610ef2565b9250610f8d60208501610ef2565b9150604084013590509250925092565b60008060408385031215610faf578182fd5b610fb883610ef2565b946020939093013593505050565b600060208284031215610fd7578081fd5b5035919050565b600080600060608486031215610ff2578283fd5b505081359360208301359350604090920135919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b901515815260200190565b6000602080835283518082850152825b8181101561108f57858101830151858201604001528201611073565b818111156110a05783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f6f6e6c79207465616d20616464726573732063616e206465706f736974000000604082015260600190565b6020808252600a908201527f6d696e7420666972737400000000000000000000000000000000000000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f7465616d20616464726573732063616e74206d696e7400000000000000000000604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6000821982111561152d5761152d611613565b500190565b600082611566577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115a3576115a3611613565b500290565b6000828210156115ba576115ba611613565b500390565b6002810460018216806115d357607f821691505b6020821081141561160d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205d13cbc242e33f7c6712e71d0600a8b3f945b6803aa312e91205320f11bb755364736f6c63430008000033455448504f4f4c207265776172647320646973747269627574696f6e20746f6b656e",
  "deployedBytecode": "0x6080604052600436106101295760003560e01c806342966c68116100a557806395d89b4111610074578063a9059cbb11610059578063a9059cbb146102e8578063dd62ed3e14610308578063f8369e871461032857610129565b806395d89b41146102b3578063a457c2d7146102c857610129565b806342966c681461023e578063649174281461025e57806370a082311461027e5780637ff9b5961461029e57610129565b806318160ddd116100fc57806323b872dd116100e157806323b872dd146101dc578063313ce567146101fc578063395093511461021e57610129565b806318160ddd146101985780631c75f085146101ba57610129565b806306fdde031461012e578063095ea7b3146101595780631249c58b14610186578063152111f714610190575b600080fd5b34801561013a57600080fd5b50610143610348565b6040516101509190611063565b60405180910390f35b34801561016557600080fd5b50610179610174366004610f9d565b6103da565b6040516101509190611058565b61018e6103f7565b005b61018e6104d2565b3480156101a457600080fd5b506101ad6105cd565b60405161015091906114f5565b3480156101c657600080fd5b506101cf6105d3565b6040516101509190611009565b3480156101e857600080fd5b506101796101f7366004610f62565b6105f7565b34801561020857600080fd5b506102116106c8565b604051610150919061150c565b34801561022a57600080fd5b50610179610239366004610f9d565b6106cd565b34801561024a57600080fd5b5061018e610259366004610fc6565b61072e565b34801561026a57600080fd5b506101ad610279366004610fde565b6107bb565b34801561028a57600080fd5b506101ad610299366004610f16565b6107eb565b3480156102aa57600080fd5b506101ad610817565b3480156102bf57600080fd5b5061014361085e565b3480156102d457600080fd5b506101796102e3366004610f9d565b61086d565b3480156102f457600080fd5b50610179610303366004610f9d565b61090d565b34801561031457600080fd5b506101ad610323366004610f30565b610921565b34801561033457600080fd5b506101ad610343366004610fde565b610959565b606060038054610357906115bf565b80601f0160208091040260200160405190810160405280929190818152602001828054610383906115bf565b80156103d05780601f106103a5576101008083540402835291602001916103d0565b820191906000526020600020905b8154815290600101906020018083116103b357829003601f168201915b5050505050905090565b60006103ee6103e7610978565b848461097c565b50600192915050565b3373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000161415610470576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061142a565b60405180910390fd5b60006104883461047e6105cd565b61027934476115a8565b90507f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f3382346040516104bd9392919061102a565b60405180910390a16104cf3382610a8b565b50565b60006104dc6105cd565b11610513576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061127f565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611248565b7f8ad0c4905aa5603107e860e0c2b1a78e23eba312c30f8114a70d94d9e187f5af346105b56105af6105cd565b47610b98565b6040516105c39291906114fe565b60405180910390a1565b60025490565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610604848484610bd3565b73ffffffffffffffffffffffffffffffffffffffff8416600090815260016020526040812081610632610978565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050828110156106a9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906112b6565b6106bd856106b5610978565b85840361097c565b506001949350505050565b601290565b60006103ee6106da610978565b8484600160006106e8610978565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918b1681529252902054610729919061151a565b61097c565b60006107428261073c6105cd565b47610959565b90507f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a3383836040516107779392919061102a565b60405180910390a16107893383610d99565b604051339082156108fc029083906000818181858888f193505050501580156107b6573d6000803e3d6000fd5b505050565b60006107c78383610b98565b6107d9670de0b6b3a76400008661156b565b6107e39190611532565b949350505050565b73ffffffffffffffffffffffffffffffffffffffff81166000908152602081905260409020545b919050565b60006108216105cd565b1561084f5761082e6105cd565b610840670de0b6b3a76400004761156b565b61084a9190611532565b610859565b670de0b6b3a76400005b905090565b606060048054610357906115bf565b6000806001600061087c610978565b73ffffffffffffffffffffffffffffffffffffffff908116825260208083019390935260409182016000908120918816815292529020549050828110156108ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611461565b6109036108fa610978565b8585840361097c565b5060019392505050565b60006103ee61091a610978565b8484610bd3565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b6000670de0b6b3a764000061096e8484610b98565b6107d9908661156b565b3390565b73ffffffffffffffffffffffffffffffffffffffff83166109c9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906113cd565b73ffffffffffffffffffffffffffffffffffffffff8216610a16576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104679061118e565b73ffffffffffffffffffffffffffffffffffffffff80841660008181526001602090815260408083209487168084529490915290819020849055517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92590610a7e9085906114f5565b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8216610ad8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906114be565b610ae4600083836107b6565b8060026000828254610af6919061151a565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610b3090849061151a565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610b809085906114f5565b60405180910390a3610b94600083836107b6565b5050565b60008215610bc25782610bb3670de0b6b3a76400008461156b565b610bbd9190611532565b610bcc565b670de0b6b3a76400005b9392505050565b73ffffffffffffffffffffffffffffffffffffffff8316610c20576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611370565b73ffffffffffffffffffffffffffffffffffffffff8216610c6d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906110d4565b610c788383836107b6565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610cd8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610467906111eb565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610d1c90849061151a565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610d8091906114f5565b60405180910390a3610d938484846107b6565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8216610de6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611313565b610df2826000836107b6565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610e52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161046790611131565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610e8e9084906115a8565b909155505060405160009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef90610ede9086906114f5565b60405180910390a36107b6836000846107b6565b803573ffffffffffffffffffffffffffffffffffffffff8116811461081257600080fd5b600060208284031215610f27578081fd5b610bcc82610ef2565b60008060408385031215610f42578081fd5b610f4b83610ef2565b9150610f5960208401610ef2565b90509250929050565b600080600060608486031215610f76578081fd5b610f7f84610ef2565b9250610f8d60208501610ef2565b9150604084013590509250925092565b60008060408385031215610faf578182fd5b610fb883610ef2565b946020939093013593505050565b600060208284031215610fd7578081fd5b5035919050565b600080600060608486031215610ff2578283fd5b505081359360208301359350604090920135919050565b73ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b73ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b901515815260200190565b6000602080835283518082850152825b8181101561108f57858101830151858201604001528201611073565b818111156110a05783604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b60208082526023908201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260408201527f6573730000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60408201527f6365000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526022908201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560408201527f7373000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526026908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260408201527f616c616e63650000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601d908201527f6f6e6c79207465616d20616464726573732063616e206465706f736974000000604082015260600190565b6020808252600a908201527f6d696e7420666972737400000000000000000000000000000000000000000000604082015260600190565b60208082526028908201527f45524332303a207472616e7366657220616d6f756e742065786365656473206160408201527f6c6c6f77616e6365000000000000000000000000000000000000000000000000606082015260800190565b60208082526021908201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360408201527f7300000000000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526025908201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460408201527f6472657373000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526024908201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460408201527f7265737300000000000000000000000000000000000000000000000000000000606082015260800190565b60208082526016908201527f7465616d20616464726573732063616e74206d696e7400000000000000000000604082015260600190565b60208082526025908201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760408201527f207a65726f000000000000000000000000000000000000000000000000000000606082015260800190565b6020808252601f908201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604082015260600190565b90815260200190565b918252602082015260400190565b60ff91909116815260200190565b6000821982111561152d5761152d611613565b500190565b600082611566577f4e487b710000000000000000000000000000000000000000000000000000000081526012600452602481fd5b500490565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156115a3576115a3611613565b500290565b6000828210156115ba576115ba611613565b500390565b6002810460018216806115d357607f821691505b6020821081141561160d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fdfea26469706673582212205d13cbc242e33f7c6712e71d0600a8b3f945b6803aa312e91205320f11bb755364736f6c63430008000033",
  "devdoc": {
    "author": "Capu",
    "events": {
      "Burn(address,uint256,uint256)": {
        "details": "Just the Transfer event is not enough, since that doesnt track how much eth was returned",
        "params": {
          "ethAmount": "how much eth is returned to the user",
          "tokenAmount": "how many tokens are burned",
          "user": "who the tokens are burned from"
        }
      },
      "Mint(address,uint256,uint256)": {
        "details": "Just the Transfer event is not enough, since that doesnt track how much eth was used to mint",
        "params": {
          "ethAmount": "how much eth is deposited into the pool",
          "tokenAmount": "how many tokens are issued",
          "user": "who the tokens are issued to"
        }
      },
      "RewardsDeposited(uint256,uint256)": {
        "params": {
          "amount": "The rewards amount",
          "newPrice": "The tokenPrice after the rewards are deposited"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(uint256)": {
        "details": "This doesnt change the tokenPrice, except in the case of a burn getting the totalSupply to zero, where the price would go back to 1",
        "params": {
          "amount": "the amount of tokens to burn"
        }
      },
      "constructor": {
        "details": "The teamAddress is set to the deployer addressUses the default of 18 decimals"
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "depositRewards()": {
        "details": "This DOES change the tokenPrice"
      },
      "ethFromBurn(uint256,uint256,uint256)": {
        "params": {
          "ethBalance": "the contract's eth balance that the price will be computed with",
          "tokenSupply": "the token total supply that the price will be computed with"
        },
        "returns": {
          "_0": "raw ETH amount returned by burning tokens (without any 'precision')"
        }
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint()": {
        "details": "This doesnt change the tokenPrice"
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "tokenFromMint(uint256,uint256,uint256)": {
        "params": {
          "ethBalance": "the contract's eth balance that the price will be computed with",
          "tokenSupply": "the token total supply that the price will be computed with"
        },
        "returns": {
          "_0": "raw token amount returned by depositing ETH (without any 'precision')"
        }
      },
      "tokenPrice()": {
        "details": "This is only called from outside the contract",
        "returns": {
          "_0": "The token price with 18 decimals precision"
        }
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "title": "ETHPool, a rewards distribution contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "burn(uint256)": {
        "notice": "Burn your POOL tokens, and get your ETH back plus any rewards"
      },
      "constructor": {
        "notice": "Constructor, initializes name and symbols to hard-coded values"
      },
      "depositRewards()": {
        "notice": "Deposit ETH into the pool, without minting tokens, so it makes the tokens already owned by users more valuable in ETHmsg.value will be the amount of eth to deposit. The amount of tokens issued can be lower"
      },
      "mint()": {
        "notice": "Deposit ETH into the pool, minting an ERC20 token representing shares of the poolmsg.value will be the amount of eth to deposit. The amount of tokens issued can be lower"
      },
      "teamAddress()": {
        "notice": "the address that can deposit rewards"
      },
      "tokenPrice()": {
        "notice": "Current token price, that is, how much a token costs in terms of eth"
      }
    },
    "notice": "this is part of a tech challenge by Exactly Finance",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 15,
        "contract": "contracts/ETHPool.sol:ETHPool",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 21,
        "contract": "contracts/ETHPool.sol:ETHPool",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 23,
        "contract": "contracts/ETHPool.sol:ETHPool",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 25,
        "contract": "contracts/ETHPool.sol:ETHPool",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 27,
        "contract": "contracts/ETHPool.sol:ETHPool",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}